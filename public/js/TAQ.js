var theApp = angular.module("TAQApp", ["ngRoute"]);theApp.config(function($routeProvider) {    $routeProvider        .when("/", {            templateUrl: "templates/home.html",            controller: 'LoginController'        })        .when("/docent", {            templateUrl: "templates/docent.html",            controller: 'QuestionSelectController'        })        .when("/docent/:id", {            templateUrl: "templates/quizTeacher.html",            controller: "QuizTeacherController"        })        .when("/:id", {            templateUrl: "templates/quizStudent.html",            controller: "QuizStudentController"        })        .when("/error", {             templateUrl: "templates/error.html"//             controller: "QuizStudentController"        });//        .otherwise({//            redirectTo: "/"//        });});theApp.factory('socketIO', function ($rootScope) {    var socket = io();    socket.on("connect", function() {    });    return {        on: function (eventName, callback) {            socket.on(eventName, function () {                var args = arguments;                $rootScope.$apply(function () {                    callback.apply(socket, args);                });            });        },        emit: function (eventName, data, callback) {            socket.emit(eventName, data, function () {                var args = arguments;                $rootScope.$apply(function () {                    if (callback) {                        callback.apply(socket, args);                    }                });            })        },        id: function() {            return socket.io.engine.id        }    };});theApp.controller("MainQuizController", function($scope, $http, socketIO){    dbData = null;    $http.get("/db")        .success(function(data) {            $scope.questions = data.questions;            $scope.questionSets = data.questionSets;            dbData = data;        })        .error(function() {            alert("Could not get data from server");        });    $scope.data = {        student: null,        teacher: null,        quizz: null    };    $scope.data.players = [];    $scope.data.urlString = null;});theApp.controller("LoginController", function($scope, $http, $location) {    //-------------------------------------------------------------------------------------------------    //TEACHER    //-------------------------------------------------------------------------------------------------    $scope.userName = "";    $scope.password = "";    $scope.teacherLogin = function teacherLogin() {        var object = {            username: $scope.userName,            password: $scope.password        };        $http.post('/login', object)            .success(function(data) {                if(data === 'true') {                    $scope.data.teacher = {                        username: $scope.userName,                        password: $scope.password                    };                    $location.path('/docent');                }                else if(data === 'false') {                    $("#password").css("border", "2px solid red");                    $("#username").css("border", "2px solid red");                    $("#errormessageTeacher").css("display", "block");                    //$location.path('/');                }            })            .error(function(status) {                alert("AJAX ERROR");            });    };    //-------------------------------------------------------------------------------------------------    //-------------------------------------------------------------------------------------------------    //-------------------------------------------------------------------------------------------------    //STUDENT    //-------------------------------------------------------------------------------------------------    $scope.roomCode = null;    $scope.studentName = null;    $scope.goToRoom = function goToRoom() {        var object = {            studentName: $scope.studentName,            roomCode: $scope.roomCode        };        if($scope.roomCode !== null && $scope.studentName !== null) {            $http.post('/' + $scope.roomCode, object)                .success(function (data) {                    if (data === 'true') {                        $scope.data.student = {                            name: $scope.studentName,                            roomCode: $scope.roomCode                        };                        $location.path('/' + $scope.roomCode);                    }                    else if (data === 'false') {                        $("#studentname").css("border", "2px solid red");                        $("#kamercode").css("border", "2px solid red");                        $("#errormessageStudent").css("display", "block");                    }                    else if(data === 'alreadyExists') {                        $("#errormessageStudent3").css("display", "block");                    }                })                .error(function (status) {                    alert("random error");                });        }        else {            $("#studentname").css("border", "2px solid red");            $("#kamercode").css("border", "2px solid red");            $("#errormessageStudent2").css("display", "block");        }    };    //-------------------------------------------------------------------------------------------------    //-------------------------------------------------------------------------------------------------});theApp.controller("QuestionSelectController", function($scope, $location, $http) {    window.onbeforeunload = function() {        return "Weet je het zeker? Als je deze pagina herlaadt, gaan alle gegevens verloren!";    };    //-------------------------------------------------------------------------------------------------    // CHECK IF TEACHER OBJECT HAS BEEN FILLED    //-------------------------------------------------------------------------------------------------    if($scope.data.teacher === null) {        $location.path('/');    }    //-------------------------------------------------------------------------------------------------    //-------------------------------------------------------------------------------------------------    //-------------------------------------------------------------------------------------------------    // ADD SELECTED QUESTIONS TO SET    //-------------------------------------------------------------------------------------------------    $scope.questionsChecked = [];    $scope.addToSelection = function addToSelection(questionObject) {        var idx = $scope.questionsChecked.indexOf(questionObject);        // if question is selected again, delete it        if (idx > -1) {            $scope.questionsChecked.splice(idx, 1);        }        // if question gets selected, add it        else {            $scope.questionsChecked.push(questionObject);        }    };    $scope.setQuestionNumber = function setQuestionNumber() {        for(var i = 1; i === $scope.questionsChecked.length; i++) {            $scope.questionsChecked[i].questionnr = i;        }    };    $scope.addQuestionsToSet = function() {        $scope.setQuestionNumber();        var object;        object = {            setnr:      10,            setName:   $scope.setname,            setQuestions: $scope.questionsChecked        };        $http.post("/docent", object)            .success(function(storedSet) {                $scope.questionSets.push(object);            })            .error(function(data,status) {                alert("AJAX ERROR");            });    };    //-------------------------------------------------------------------------------------------------    //-------------------------------------------------------------------------------------------------    //-------------------------------------------------------------------------------------------------    // USE SELECTED SET FOR THE QUIZ    //-------------------------------------------------------------------------------------------------    $scope.useSetForQuiz = function useSetForQuiz(set) {        $scope.data.quizz = set;        $("#startQuiz").removeAttr("disabled");//        var myEl = angular.element( document.querySelector( '#startQuiz' ) );//        myEl.removeAttr('disabled');    };    $scope.generateURL = function generateURL() {        $scope.data.urlString = "";        var possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";        for( var i=0; i < 5; i++ )            $scope.data.urlString += possible.charAt(Math.floor(Math.random() * possible.length));        return $scope.data.urlString;    };        $scope.generateQuiz = function() {            $scope.generateURL();            var urlObject = {                urlString: $scope.data.urlString            };            $http.post("/docent/"+$scope.data.urlString, urlObject)                .success(function(data) {                    $location.path("/docent/"+$scope.data.urlString);                })                .error(function(data,status) {                    alert("AJAX ERROR");            });    };    //-------------------------------------------------------------------------------------------------    //-------------------------------------------------------------------------------------------------});theApp.controller("QuizStudentController",function($scope, $routeParams, $location, $http, socketIO) {    if ($scope.data.student === null) {        $location.path("/");    }    window.onbeforeunload = function() {        return "Weet je het zeker? Als je deze pagina herlaadt, gaan alle gegevens verloren!";    };    //-------------------------------------------------------------------------------------------------    //SOCKETS    //-------------------------------------------------------------------------------------------------    var newPlayer = $scope.data.student.name;    socketIO.emit("new player", newPlayer);    $scope.random = function() {        return 0.5 - Math.random();    };    socketIO.on("question sent", function(question) {        $scope.currentQuestion = question;        document.getElementById("countdown").style.display='block'; // watch for spelling        $("#antwoord").css("display", "block");//        $("#score").css("display", "block");        $("#wachtkamer").css("display", "none");        var count = 15;        var counter = setInterval(timer,1000);        function timer()        {            count=count-1;            if (count <= 0)            {                clearInterval(counter);                document.getElementById("countdown").style.display='none'; // watch for spelling                $("#antwoord").css("display", "none");//                $("#score").css("display", "none");                $("#wachtkamer").css("display", "block");                return;            }            document.getElementById("timer").innerHTML=count; // watch for spelling        }    });    socketIO.on("new player joined", function(newPlayerObject) {        $scope.data.players.push(newPlayerObject);    });    $scope.setAnswer = function setAnswer(answer) {        $scope.answerSelected = answer;    };    $scope.myScore = 0;    $scope.sendAnswer = function sendAnswer() {        document.getElementById("countdown").style.display='none'; // watch for spelling        $("#antwoord").css("display", "none");//        $("#score").css("display", "none");        $("#wachtkamer").css("display", "block");        var givenPoints = 0;        if($scope.answerSelected === $scope.currentQuestion.answer) {            givenPoints = $scope.currentQuestion.points;        }        var answerObject = {            studentName: newPlayer,            answer: $scope.answerSelected,            points: givenPoints        };        socketIO.emit("send answer", answerObject);        $scope.myScore = $scope.myScore + parseInt(givenPoints);    };    socketIO.on("results sent", function(finalScores) {        console.log(finalScores);        $scope.finalScores = finalScores.players;        $("#endresult2").css("display", "block");    });    //-------------------------------------------------------------------------------------------------    //-------------------------------------------------------------------------------------------------});theApp.controller("QuizTeacherController",function($scope, $routeParams, $location, $http, socketIO) {    window.onbeforeunload = function() {        return "Weet je het zeker? Als je deze pagina herlaadt, gaan alle gegevens verloren!";    };    $scope.playersAnswered = [];    socketIO.on("new player joined", function(newPlayerObject) {        $scope.data.players.push(newPlayerObject);    });    //STUUR VRAAG DOOR NAAR STUDENTEN    var i = 0;    $scope.sendQuestion = function sendQuestion() {        if($scope.data.players.length > 1) {            $("#notEnoughPlayers").css("display", "none");            if (i !== $scope.data.quizz.setQuestions.length) {                $("#questionAnsweredBy").css("display", "block");                document.getElementById("countdown").style.display = 'block'; // watch for spelling                var count = 15;                var counter = setInterval(timer, 1000);                $("#sendQuestion").css("display", "none");                function timer() {                    count = count - 1;                    if (count <= 0) {                        clearInterval(counter);                        document.getElementById("countdown").style.display = 'none'; // watch for spelling                        $("#sendQuestion").css("display", "block");                        $("#questionAnsweredBy").css("display", "none");                        return;                    }                    document.getElementById("timer").innerHTML = count; // watch for spelling                }                socketIO.emit("send question", $scope.data.quizz.setQuestions[i]);                i++;                $scope.playersAnswered = [];            }            else {                console.log("quiz is afgelopen!");                var finaldata = {                    players: $scope.data.players,                    urlString: $scope.data.urlString                };                socketIO.emit("quiz results", finaldata);//                $http.post("/insertresult", $scope.data.players)//                    .success(function(data) {////                    })//                    .error(function(data,status) {//                        alert("AJAX ERROR");//                    });            }        }        else {            $("#notEnoughPlayers").css("display", "block");        }    };    socketIO.on("answer sent", function(answerObject) {    console.log(answerObject);        for(var i=0; i< $scope.data.players.length; i++) {            if(answerObject.studentName === $scope.data.players[i].studentName) {                $scope.data.players[i].score = $scope.data.players[i].score + parseInt(answerObject.points);            }        }        $scope.playersAnswered.push(answerObject);    });});